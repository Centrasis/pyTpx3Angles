cmake_minimum_required (VERSION 3.9)
PROJECT(pyTimepixAngles CXX)

get_directory_property(hasParent PARENT_DIRECTORY)

option(USE_LibKatherine "use the real divice hardware or simulate it" OFF)
option(USE_CompiletimeRessources "use OpenCL files or compile the files into the binary" OFF)
option(USE_KATHERINE "use the katherine file format (simulation only)" ON)

set (CMAKE_CXX_FLAGS "/std:c++17 /EHsc /MP") 
set (CMAKE_C_FLAGS "/std:c17 /EHsc /MP")
SET(local_TPX_LIBS_DBG "")
SET(local_TPX_LIBS_REL "")
SET(local_TPX_INCLUDES "")
SET(compiler_defs "")

if(NOT UNIX)
   add_compile_definitions(WIN32)
   list(APPEND compiler_defs WIN32)
endif()
add_compile_definitions(__USE_OPENCL__)
list(APPEND compiler_defs __USE_OPENCL__)

message(STATUS "Fetching libraries...")
execute_process(COMMAND "git" "submodule" "update" "--init" WORKING_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/cxx")

message(STATUS "Build pybind...")
execute_process(COMMAND "cmake" "-S" "." "-B" "build" WORKING_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/pybind11")
execute_process(COMMAND "cmake" "--build" "build" "-j4" WORKING_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/pybind11")
execute_process(COMMAND "cmake" "--install" "build" WORKING_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/pybind11")

if(${USE_LibKatherine} MATCHES ON)
    message(STATUS "Building katherine Lib...")
    add_subdirectory("${CMAKE_CURRENT_SOURCE_DIR}/cxx/katherine" "${CMAKE_CURRENT_SOURCE_DIR}/cxx/katherine/build")
    
    list(APPEND local_TPX_INCLUDES "${CMAKE_CURRENT_SOURCE_DIR}/cxx/katherine/cxx/include")
    list(APPEND local_TPX_LIBS_REL "${CMAKE_CURRENT_SOURCE_DIR}/cxx/katherine/build/Release/katherine.dll")	
    list(APPEND local_TPX_LIBS_DBG "${CMAKE_CURRENT_SOURCE_DIR}/cxx/katherine/build/Debug/katherine.dll")
endif()

if(${USE_LibKatherine} MATCHES OFF)
   message(STATUS "Simulate device")
   add_compile_definitions(__SIMULATION__)
   list(APPEND compiler_defs __SIMULATION__)
   if(hasParent)
      SET(USE_LibKatherine OFF PARENT_SCOPE)
   endif()
endif()

message(STATUS "Building Tpx3Dosi Lib...")
add_subdirectory("${CMAKE_CURRENT_SOURCE_DIR}/cxx/Tpx3Dosi" "${CMAKE_CURRENT_SOURCE_DIR}/cxx/Tpx3Dosi/build")
list(APPEND local_TPX_INCLUDES "${CMAKE_CURRENT_SOURCE_DIR}/cxx/Tpx3Dosi/include")
list(APPEND local_TPX_INCLUDES "${CMAKE_CURRENT_SOURCE_DIR}/cxx/OCLDaMa/includes")
list(APPEND local_TPX_LIBS_REL "${CMAKE_CURRENT_SOURCE_DIR}/cxx/Tpx3Dosi/lib/Release/katherinetimepix.lib")	
list(APPEND local_TPX_LIBS_DBG "${CMAKE_CURRENT_SOURCE_DIR}/cxx/Tpx3Dosi/lib/Debug/katherinetimepix.lib")

if(${USE_CompiletimeRessources} MATCHES ON)
    if (EXISTS "${CMAKE_CURRENT_SOURCE_DIR}/src/opencl")
        add_custom_command(TARGET pyTimepixAngles PRE_BUILD COMMAND "${CMAKE_CURRENT_SOURCE_DIR}/cxx/OCLDaMa/OCL_RC/Debug/OCL_RC.exe" "${CMAKE_CURRENT_SOURCE_DIR}/src/opencl" "${CMAKE_CURRENT_SOURCE_DIR}/cxx/OCLDaMa/includes")
        message(STATUS "OpenCL RC at ${CMAKE_CURRENT_SOURCE_DIR}/cxx/OCLDaMa/OCL_RC/Debug/OCL_RC.exe was registered")
        add_compile_definitions(__USE_COMPILETIMERESSOURCES__)
        list(APPEND compiler_defs __USE_COMPILETIMERESSOURCES__)
    else()
        message(STATUS "No opencl files were found at: ${CMAKE_CURRENT_SOURCE_DIR}/src/opencl -> skip OpenCL RC")
    endif()
endif()

find_package(Python COMPONENTS Interpreter Development REQUIRED)
find_package(pybind11 CONFIG REQUIRED)
#add_subdirectory(pybind11)
pybind11_add_module(pyTimepixAngles src/bindings.cpp)
target_link_libraries(pyTimepixAngles PUBLIC debug ${local_TPX_LIBS_DBG})
target_link_libraries(pyTimepixAngles PUBLIC optimized ${local_TPX_LIBS_REL})
target_compile_definitions(pyTimepixAngles PUBLIC ${compiler_defs})
target_include_directories(pyTimepixAngles PUBLIC ${local_TPX_INCLUDES})